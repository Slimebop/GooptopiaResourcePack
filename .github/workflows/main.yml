name: Resourcepack Zipper

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # A non-shallow repository clone is required

    - name: Run PackSquash
      uses: ComunidadAylas/PackSquash-action@v4
      with:
        packsquash_version: latest # Uses the latest PackSquash release supported by the action
        shader_source_transformation_strategy: keep_as_is

    - name: Create ZIP file
      run: |
        COMMIT_ID=$(git rev-parse --short HEAD)
        ZIP_NAME="RP.zip"
        echo "ZIP_NAME=${ZIP_NAME}" >> $GITHUB_ENV
        zip -r "${ZIP_NAME}" . -x *.git* -x server.properties

    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v4
      with:
        name: resource-pack-artifact
        path: ${{ env.ZIP_NAME }}
        
    - name: Generate SHA1 Checksum
      run: |
        echo CHECKSUM="$(shasum ${{ env.ZIP_NAME }} | awk '{ print $1 }')" >> "$GITHUB_ENV"
        
    - name: Get File Size
      run: |
        echo FILE_SIZE_COMPRESSED="$({ find . -type f -name "${{ env.ZIP_NAME }}" -printf "%s+"; echo 0; } | bc | numfmt --to=iec)B" >> "$GITHUB_ENV"
        echo FILE_SIZE_UNCOMPRESSED="$(unzip -l RP.zip | tail -1 | xargs | cut -d' ' -f1 | numfmt --to=iec)B" >> "$GITHUB_ENV"
        echo FILE_SIZE_JSON="$({ find assets/ -type f -name "*.json" -printf "%s+"; echo 0; } | bc | numfmt --to=iec)B" >> "$GITHUB_ENV"
        echo FILE_SIZE_PNG="$({ find assets/ -type f -name "*.png" -printf "%s+"; echo 0; } | bc | numfmt --to=iec)B" >> "$GITHUB_ENV"
        echo FILE_SIZE_OGG="$({ find assets/ -type f -name "*.ogg" -printf "%s+"; echo 0; } | bc | numfmt --to=iec)B" >> "$GITHUB_ENV"
        
    
    - name: Create serverresourcepackreload.properties
      uses: 1arp/create-a-file-action@0.4.5
      with:
        path: ''
        isAbsolutePath: false
        file: 'serverresourcepackreload.properties'
        content: |
          resourcepack.url=https\://github.com/${{ github.repository }}/releases/download/release-${{ github.sha }}/${{ env.ZIP_NAME }}
          resourcepack.sha1=${{env.CHECKSUM}}
    - name: Upload serverresourcepackreload.properties to FileZilla
      uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      with:
         username: ${{ secrets.FTP_USER }}
         server: ${{ secrets.FTP_HOST }}
         port: ${{ secrets.FTP_PORT }}
         password: ${{ secrets.FTP_PASSWORD }}
         local_path: './serverresourcepackreload.properties'
         remote_path: 'config/'
         sftp_only: true
         
    - name: Edit server.properties
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        path: server.properties
        find: "\nresource-pack="
        replace: "\nresource-pack=https://github.com/${{ github.repository }}/releases/download/release-${{ github.sha }}/${{ env.ZIP_NAME }}"
        regex: false
        
    - name: Edit server.properties #2
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        path: server.properties
        find: "\nresource-pack-sha1="
        replace: "\nresource-pack-sha1=${{env.CHECKSUM}}"
        regex: false
        
    - name: Upload serverresourcepackreload.properties to FileZilla
      uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      with:
         username: ${{ secrets.FTP_USER }}
         server: ${{ secrets.FTP_HOST }}
         port: ${{ secrets.FTP_PORT }}
         password: ${{ secrets.FTP_PASSWORD }}
         local_path: './server.properties'
         remote_path: './'
         sftp_only: true
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RESOURCE_ZIPPER }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Release Artifact
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RESOURCE_ZIPPER }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/${{ env.ZIP_NAME }}
        asset_name: ${{ env.ZIP_NAME }}
        asset_content_type: application/zip
    
    - name: Make the commit message compatible with JSON
      run: |
        # Escape the commit message for JSON
        COMMIT_MESSAGE=$(echo -n "${{ github.event.head_commit.message }}" | sed 's/%0A/\\n/g' | jq -s -Rr @json)
        COMMIT_MESSAGE=${COMMIT_MESSAGE:1:-1}
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
        
    - name: Discord Message
      uses: satak/webrequest-action@master
      with:
        url: ${{ secrets.DISCORD_WEBHOOK }}
        method: POST
        payload: '{ "embeds": [{ "title": "New Resource Pack Release", "author": {"name": "${{ github.event.head_commit.author.name}}","url": "https://github.com/${{ github.event.head_commit.author.username}}","icon_url": "https://github.com/${{ github.event.head_commit.author.username}}.png"},"description": "```Commit Message:\n\n${{ env.COMMIT_MESSAGE }}```\nGithub changelog: [here](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\nPermanent link to latest resource pack: [here](https://github.com/${{ github.repository }}/releases/latest/download/${{ env.ZIP_NAME }})\nLink to this resource pack: [here](https://github.com/${{ github.repository }}/releases/download/release-${{ github.sha }}/${{ env.ZIP_NAME }})\nRelease ID: release-${{ github.sha }}\nSHA1: ${{env.CHECKSUM}}\n\nResource Pack Size (**compressed**): ${{ env.FILE_SIZE_COMPRESSED }}\nResource Pack Size (**uncompressed**): ${{ env.FILE_SIZE_UNCOMPRESSED }}\n> .ogg files: ${{ env.FILE_SIZE_OGG }}\n> .json files: ${{ env.FILE_SIZE_JSON }}\n> .png files: ${{ env.FILE_SIZE_PNG }}", "url": "https://github.com/${{ github.repository }}/releases/tag/release-${{ github.sha }}", "color": 3384627 }] }'
        
    - name: Discord Message #2 (sent to minecraft)
      uses: satak/webrequest-action@master
      with:
        url: ${{ secrets.DISCORD_WEBHOOK_CONSOLE }}
        method: POST
        payload: '{"content":"resourcepack setLatestResourcepack \"https://github.com/${{ github.repository }}/releases/download/release-${{ github.sha }}/${{ env.ZIP_NAME }}\" \"${{env.CHECKSUM}}\" ${{env.COMMIT_MESSAGE}}"}'